<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.scdx.demo.dao.GoodsMapper">
  <resultMap id="BaseResultMap" type="edu.scdx.demo.entity.Goods">
    <constructor>
      <idArg column="goods_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="type_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="brand" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="goods_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="goods_pic" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="goods_detail" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="goods_origin" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="old_price" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="price" javaType="java.lang.Double" jdbcType="DOUBLE" />
      <arg column="goods_ordernum" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="goods_hits" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="count" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goods_id, type_name, brand, goods_name, goods_pic, goods_detail, goods_origin, old_price, 
    price, goods_ordernum, goods_hits, count
  </sql>
  <select id="selectByExample" parameterType="edu.scdx.demo.entity.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.scdx.demo.entity.GoodsExample">
    delete from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.scdx.demo.entity.Goods">
    insert into goods (goods_id, type_name, brand, 
      goods_name, goods_pic, goods_detail, 
      goods_origin, old_price, price, 
      goods_ordernum, goods_hits, count
      )
    values (#{goodsId,jdbcType=INTEGER}, #{typeName,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR}, 
      #{goodsName,jdbcType=VARCHAR}, #{goodsPic,jdbcType=VARCHAR}, #{goodsDetail,jdbcType=INTEGER}, 
      #{goodsOrigin,jdbcType=VARCHAR}, #{oldPrice,jdbcType=DOUBLE}, #{price,jdbcType=DOUBLE}, 
      #{goodsOrdernum,jdbcType=INTEGER}, #{goodsHits,jdbcType=INTEGER}, #{count,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.scdx.demo.entity.Goods">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="typeName != null">
        type_name,
      </if>
      <if test="brand != null">
        brand,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsPic != null">
        goods_pic,
      </if>
      <if test="goodsDetail != null">
        goods_detail,
      </if>
      <if test="goodsOrigin != null">
        goods_origin,
      </if>
      <if test="oldPrice != null">
        old_price,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="goodsOrdernum != null">
        goods_ordernum,
      </if>
      <if test="goodsHits != null">
        goods_hits,
      </if>
      <if test="count != null">
        count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="typeName != null">
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="brand != null">
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsPic != null">
        #{goodsPic,jdbcType=VARCHAR},
      </if>
      <if test="goodsDetail != null">
        #{goodsDetail,jdbcType=INTEGER},
      </if>
      <if test="goodsOrigin != null">
        #{goodsOrigin,jdbcType=VARCHAR},
      </if>
      <if test="oldPrice != null">
        #{oldPrice,jdbcType=DOUBLE},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="goodsOrdernum != null">
        #{goodsOrdernum,jdbcType=INTEGER},
      </if>
      <if test="goodsHits != null">
        #{goodsHits,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.scdx.demo.entity.GoodsExample" resultType="java.lang.Long">
    select count(*) from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods
    <set>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.typeName != null">
        type_name = #{record.typeName,jdbcType=VARCHAR},
      </if>
      <if test="record.brand != null">
        brand = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsName != null">
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsPic != null">
        goods_pic = #{record.goodsPic,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsDetail != null">
        goods_detail = #{record.goodsDetail,jdbcType=INTEGER},
      </if>
      <if test="record.goodsOrigin != null">
        goods_origin = #{record.goodsOrigin,jdbcType=VARCHAR},
      </if>
      <if test="record.oldPrice != null">
        old_price = #{record.oldPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.goodsOrdernum != null">
        goods_ordernum = #{record.goodsOrdernum,jdbcType=INTEGER},
      </if>
      <if test="record.goodsHits != null">
        goods_hits = #{record.goodsHits,jdbcType=INTEGER},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods
    set goods_id = #{record.goodsId,jdbcType=INTEGER},
      type_name = #{record.typeName,jdbcType=VARCHAR},
      brand = #{record.brand,jdbcType=VARCHAR},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      goods_pic = #{record.goodsPic,jdbcType=VARCHAR},
      goods_detail = #{record.goodsDetail,jdbcType=INTEGER},
      goods_origin = #{record.goodsOrigin,jdbcType=VARCHAR},
      old_price = #{record.oldPrice,jdbcType=DOUBLE},
      price = #{record.price,jdbcType=DOUBLE},
      goods_ordernum = #{record.goodsOrdernum,jdbcType=INTEGER},
      goods_hits = #{record.goodsHits,jdbcType=INTEGER},
      count = #{record.count,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.scdx.demo.entity.Goods">
    update goods
    <set>
      <if test="typeName != null">
        type_name = #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="brand != null">
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsPic != null">
        goods_pic = #{goodsPic,jdbcType=VARCHAR},
      </if>
      <if test="goodsDetail != null">
        goods_detail = #{goodsDetail,jdbcType=INTEGER},
      </if>
      <if test="goodsOrigin != null">
        goods_origin = #{goodsOrigin,jdbcType=VARCHAR},
      </if>
      <if test="oldPrice != null">
        old_price = #{oldPrice,jdbcType=DOUBLE},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="goodsOrdernum != null">
        goods_ordernum = #{goodsOrdernum,jdbcType=INTEGER},
      </if>
      <if test="goodsHits != null">
        goods_hits = #{goodsHits,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
    </set>
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.scdx.demo.entity.Goods">
    update goods
    set type_name = #{typeName,jdbcType=VARCHAR},
      brand = #{brand,jdbcType=VARCHAR},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_pic = #{goodsPic,jdbcType=VARCHAR},
      goods_detail = #{goodsDetail,jdbcType=INTEGER},
      goods_origin = #{goodsOrigin,jdbcType=VARCHAR},
      old_price = #{oldPrice,jdbcType=DOUBLE},
      price = #{price,jdbcType=DOUBLE},
      goods_ordernum = #{goodsOrdernum,jdbcType=INTEGER},
      goods_hits = #{goodsHits,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER}
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
  <!-- 不是生成的代码 -->
  <delete id="deleteGoodsByIds">
    delete from goods where goodsid in
    <foreach collection="ids" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </delete>
</mapper>