<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.scdx.demo.dao.OrdersMapper">
  <resultMap id="BaseResultMap" type="edu.scdx.demo.entity.Orders">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="creation_time" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="delivery_time" jdbcType="TIMESTAMP" property="deliveryTime" />
    <result column="receiving_time" jdbcType="TIMESTAMP" property="receivingTime" />
    <result column="money_of_goods" jdbcType="DOUBLE" property="moneyOfGoods" />
    <result column="money_of_delivery" jdbcType="DOUBLE" property="moneyOfDelivery" />
    <result column="order_points" jdbcType="INTEGER" property="orderPoints" />
    <result column="coupon_id" jdbcType="INTEGER" property="couponId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, user_id, goods_id, creation_time, pay_time, delivery_time, receiving_time, 
    money_of_goods, money_of_delivery, order_points, coupon_id
  </sql>
  <select id="selectByExample" parameterType="edu.scdx.demo.entity.OrdersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orders
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orders
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.scdx.demo.entity.OrdersExample">
    delete from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.scdx.demo.entity.Orders">
    insert into orders (order_id, user_id, goods_id, 
      creation_time, pay_time, delivery_time, 
      receiving_time, money_of_goods, money_of_delivery, 
      order_points, coupon_id)
    values (#{orderId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, 
      #{creationTime,jdbcType=TIMESTAMP}, #{payTime,jdbcType=TIMESTAMP}, #{deliveryTime,jdbcType=TIMESTAMP}, 
      #{receivingTime,jdbcType=TIMESTAMP}, #{moneyOfGoods,jdbcType=DOUBLE}, #{moneyOfDelivery,jdbcType=DOUBLE}, 
      #{orderPoints,jdbcType=INTEGER}, #{couponId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="edu.scdx.demo.entity.Orders">
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="creationTime != null">
        creation_time,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="deliveryTime != null">
        delivery_time,
      </if>
      <if test="receivingTime != null">
        receiving_time,
      </if>
      <if test="moneyOfGoods != null">
        money_of_goods,
      </if>
      <if test="moneyOfDelivery != null">
        money_of_delivery,
      </if>
      <if test="orderPoints != null">
        order_points,
      </if>
      <if test="couponId != null">
        coupon_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveryTime != null">
        #{deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receivingTime != null">
        #{receivingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="moneyOfGoods != null">
        #{moneyOfGoods,jdbcType=DOUBLE},
      </if>
      <if test="moneyOfDelivery != null">
        #{moneyOfDelivery,jdbcType=DOUBLE},
      </if>
      <if test="orderPoints != null">
        #{orderPoints,jdbcType=INTEGER},
      </if>
      <if test="couponId != null">
        #{couponId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.scdx.demo.entity.OrdersExample" resultType="java.lang.Long">
    select count(*) from orders
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update orders
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.creationTime != null">
        creation_time = #{record.creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deliveryTime != null">
        delivery_time = #{record.deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.receivingTime != null">
        receiving_time = #{record.receivingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.moneyOfGoods != null">
        money_of_goods = #{record.moneyOfGoods,jdbcType=DOUBLE},
      </if>
      <if test="record.moneyOfDelivery != null">
        money_of_delivery = #{record.moneyOfDelivery,jdbcType=DOUBLE},
      </if>
      <if test="record.orderPoints != null">
        order_points = #{record.orderPoints,jdbcType=INTEGER},
      </if>
      <if test="record.couponId != null">
        coupon_id = #{record.couponId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update orders
    set order_id = #{record.orderId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      creation_time = #{record.creationTime,jdbcType=TIMESTAMP},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      delivery_time = #{record.deliveryTime,jdbcType=TIMESTAMP},
      receiving_time = #{record.receivingTime,jdbcType=TIMESTAMP},
      money_of_goods = #{record.moneyOfGoods,jdbcType=DOUBLE},
      money_of_delivery = #{record.moneyOfDelivery,jdbcType=DOUBLE},
      order_points = #{record.orderPoints,jdbcType=INTEGER},
      coupon_id = #{record.couponId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.scdx.demo.entity.Orders">
    update orders
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        creation_time = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveryTime != null">
        delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="receivingTime != null">
        receiving_time = #{receivingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="moneyOfGoods != null">
        money_of_goods = #{moneyOfGoods,jdbcType=DOUBLE},
      </if>
      <if test="moneyOfDelivery != null">
        money_of_delivery = #{moneyOfDelivery,jdbcType=DOUBLE},
      </if>
      <if test="orderPoints != null">
        order_points = #{orderPoints,jdbcType=INTEGER},
      </if>
      <if test="couponId != null">
        coupon_id = #{couponId,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.scdx.demo.entity.Orders">
    update orders
    set user_id = #{userId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      creation_time = #{creationTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      delivery_time = #{deliveryTime,jdbcType=TIMESTAMP},
      receiving_time = #{receivingTime,jdbcType=TIMESTAMP},
      money_of_goods = #{moneyOfGoods,jdbcType=DOUBLE},
      money_of_delivery = #{moneyOfDelivery,jdbcType=DOUBLE},
      order_points = #{orderPoints,jdbcType=INTEGER},
      coupon_id = #{couponId,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>