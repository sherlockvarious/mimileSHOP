<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.scdx.demo.dao.TypeMapper">
  <resultMap id="BaseResultMap" type="edu.scdx.demo.entity.Type">
    <constructor>
      <idArg column="type_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <idArg column="type_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="icon" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    type_id, type_name, icon
  </sql>
  <select id="selectByExample" parameterType="edu.scdx.demo.entity.TypeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="edu.scdx.demo.entity.TypeKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from type
    where type_id = #{typeId,jdbcType=INTEGER}
      and type_name = #{typeName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="edu.scdx.demo.entity.TypeKey">
    delete from type
    where type_id = #{typeId,jdbcType=INTEGER}
      and type_name = #{typeName,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="edu.scdx.demo.entity.TypeExample">
    delete from type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.scdx.demo.entity.Type">
    insert into type (type_id, type_name, icon
      )
    values (#{typeId,jdbcType=INTEGER}, #{typeName,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.scdx.demo.entity.Type">
    insert into type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="typeId != null">
        type_id,
      </if>
      <if test="typeName != null">
        type_name,
      </if>
      <if test="icon != null">
        icon,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="typeName != null">
        #{typeName,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.scdx.demo.entity.TypeExample" resultType="java.lang.Long">
    select count(*) from type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update type
    <set>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.typeName != null">
        type_name = #{record.typeName,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null">
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update type
    set type_id = #{record.typeId,jdbcType=INTEGER},
      type_name = #{record.typeName,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.scdx.demo.entity.Type">
    update type
    <set>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
    </set>
    where type_id = #{typeId,jdbcType=INTEGER}
      and type_name = #{typeName,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.scdx.demo.entity.Type">
    update type
    set icon = #{icon,jdbcType=VARCHAR}
    where type_id = #{typeId,jdbcType=INTEGER}
      and type_name = #{typeName,jdbcType=VARCHAR}
  </update>
</mapper>